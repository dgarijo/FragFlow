<?xml version="1.0" encoding="UTF-8"?>
<pipeline version=".2">
        <connections>
                <connection source="Reference_1.Output" sink="Bowtieindexing_1.InputFQFile" />
                <connection source="InputtheSolexaTXTreadsequencefile_1.Output" sink="MAQSol2SangerConverter_1.InputtheSolexaTXTreadsequencefile" />
                <connection source="MAQRoutineInputsol2sanger_1.Output" sink="MAQSol2SangerConverter_1.MAQRoutine" />
                <connection source="Bowtieindexing_1.OutputIndexfile" sink="BowtieAlignment_1.BowtieInputIndexGenome" />
                <connection source="MAQSol2SangerConverter_1.Outputfastqfie" sink="BowtieAlignment_1.InputFQFile" />
                <connection source="BowtieAlignment_1.OutputMAPfile" sink="Output_1.Input" />
        </connections>
        <icons>
                <icon id="0" value="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" />
                <icon id="1" value="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&#xA;vxLlxzsUg7J7AAAAAElFTkSuQmCC" />
        </icons>
        <moduleGroup id="Alignment_Bowtie_1" name="Alignment_Bowtie" posX="0" posY="0" sourceCode="" recordsWorkflow="true">
                <metadata>
                        <data key="__creationDateKey" value="" />
                </metadata>
                <module id="Bowtieindexing_1" name="Bowtie: indexing" package="Bowtie" version="0.12.7" description="http://bowtie-bio.sourceforge.net/tutorial.shtml&#xA;&#xA;Building a new index&#xA;&#xA;The pre-built E. coli index included with Bowtie is built from the sequence for strain 536, known to cause urinary tract infections. We will create a new index from the sequence of E. coli strain O157:H7, a strain known to cause food poisoning. Download the sequence file by right-clicking this link and selecting &quot;Save Link As...&quot; or &quot;Save Target As...&quot;. The sequence file is named NC_002127.fna. When the sequence file is finished downloading, move it to the Bowtie install directory and issue this command:&#xA;&#xA; /applications/BOWTIE_0.10.0/bowtie-0.10.1/bowtie-build /projects1/idinov/projects/Pipeline_genomics_informatics_2011/test_data_2011/&#xA;ref_chr2.fasta /projects1/idinov/projects/Pipeline_genomics_informatics_2011/test_data_2011/chr_2_index &#xA;&#xA;&#xA;&#xA;Bowtie is an ultrafast, memory-efficient short read aligner geared toward quickly aligning large sets of short DNA sequences (reads) to large genomes. It aligns 35-base-pair reads to the human genome at a rate of 25 million reads per hour on a typical workstation. Bowtie indexes the genome with a Burrows-Wheeler  index to keep its memory footprint small: for the human genome, the index is typically about 2.2 GB (for unpaired alignment) or 2.9 GB (for paired-end or colorspace alignment). Multiple processors can be used simultaneously to achieve greater alignment speed. Bowtie can also output alignments in the standard SAM format, allowing Bowtie to interoperate with other tools supporting SAM, including the SAMtools consensus, SNP, and indel callers. Bowtie runs on the command line under Windows, Mac OS X, Linux, and Solaris.&#xA;&#xA;Bowtie also forms the basis for other tools, including TopHat: a fast splice junction mapper for RNA-seq reads, Cufflinks: a tool for transcriptome assembly and isoform quantitiation from RNA-seq reads, Crossbow: a cloud-computing software tool for large-scale resequencing data,and Myrna: a cloud computing tool for calculating differential gene expression in large RNA-seq datasets.&#xA;&#xA;/usr/local/loniWorkflows/Bioinformatics/bowtie/bowtie e_coli reads/e_coli_1000.fq&#xA;" icon="0" posX="66" posY="158" sourceCode="" location="pipeline://cranium.loni.usc.edu/bowtie-build">
                        <authors>
                                <author fullName="Ivo Dinov" email="" website="http://www.loni.ucla.edu/~dinov" />
                        </authors>
                        <citations>
                                <citation>PMID: 19261174 
PMID: 19930550
PMID: 19289445</citation>
                        </citations>
                        <tag>bioinformatics genomics</tag>
                        <uri>http://bowtie-bio.sourceforge.net/</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010" />
                        </metadata>
                        <output id="Bowtieindexing_1.OutputIndexfile" name="Output Index file" description="http://bowtie-bio.sourceforge.net/tutorial.shtml&#xA;&#xA;Building a new index&#xA;&#xA;The pre-built E. coli index included with Bowtie is built from the sequence for strain 536, known to cause urinary tract infections. We will create a new index from the sequence of E. coli strain O157:H7, a strain known to cause food poisoning. Download the sequence file by right-clicking this link and selecting &quot;Save Link As...&quot; or &quot;Save Target As...&quot;. The sequence file is named NC_002127.fna. When the sequence file is finished downloading, move it to the Bowtie install directory and issue this command:&#xA;&#xA; /applications/BOWTIE_0.10.0/bowtie-0.10.1/bowtie-build /projects1/idinov/projects/Pipeline_genomics_informatics_2011/test_data_2011/&#xA;ref_chr2.fasta /projects1/idinov/projects/Pipeline_genomics_informatics_2011/test_data_2011/chr_2_index &#xA;&#xA;&#xA;&#xA;Bowtie is an ultrafast, memory-efficient short read aligner geared toward quickly aligning large sets of short DNA sequences (reads) to large genomes. It aligns 35-base-pair reads to the human genome at a rate of 25 million reads per hour on a typical workstation. Bowtie indexes the genome with a Burrows-Wheeler  index to keep its memory footprint small: for the human genome, the index is typically about 2.2 GB (for unpaired alignment) or 2.9 GB (for paired-end or colorspace alignment). Multiple processors can be used simultaneously to achieve greater alignment speed. Bowtie can also output alignments in the standard SAM format, allowing Bowtie to interoperate with other tools supporting SAM, including the SAMtools consensus, SNP, and indel callers. Bowtie runs on the command line under Windows, Mac OS X, Linux, and Solaris.&#xA;&#xA;Bowtie also forms the basis for other tools, including TopHat: a fast splice junction mapper for RNA-seq reads, Cufflinks: a tool for transcriptome assembly and isoform quantitiation from RNA-seq reads, Crossbow: a cloud-computing software tool for large-scale resequencing data,and Myrna: a cloud computing tool for calculating differential gene expression in large RNA-seq datasets.&#xA;&#xA;/usr/local/loniWorkflows/Bioinformatics/bowtie/bowtie e_coli reads/e_coli_1000.fq&#xA;" required="true" enabled="true" order="2">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="SAMtools" extension="fai" description="FAI file" />
                                                <filetype name="fasta.index" extension="fasta.index" description="fasta index file">
                                                        <need>fasta</need>
                                                </filetype>
                                        </fileTypes>
                                </format>
                        </output>
                        <input id="Bowtieindexing_1.InputFQFile" name="Input FQ File" description="samtools sort aln.bam aln_sorted.bam " required="true" enabled="true" order="1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="MAQ fastq file" extension="fastq" description="MAQ fastq file type" />
                                                <filetype name="Sequence FASTQ File Type" extension="fq" description="Sequence FASTQ File Type" />
                                                <filetype name="Fasta" extension="fasta" description="BLAST input query FASTA file" />
                                        </fileTypes>
                                </format>
                        </input>
                        <input id="Bowtieindexing_1.Options" name="Options" description="Also, the -t option instructs Bowtie to print timing statistics. The output should look something like this: " required="false" enabled="false" order="0">
                                <format type="String" cardinality="1" />
                        </input>
                        <executableAuthors>
                                <author fullName="Heng Li" email="" website="[PMID: 19505943] " />
                        </executableAuthors>
                        <license>http://www.cbcb.umd.edu/research/SR-assembly.shtml 
open-source Artistic License</license>
                </module>
                <module id="MAQSol2SangerConverter_1" name="MAQ Sol2Sanger Converter" package="MAQ" version="0.7.1" description="Maq is a software that builds mapping assemblies from short reads generated by the next-generation sequencing machines. It is particularly designed for Illumina-Solexa 1G Genetic Analyzer, and has preliminary functions to handle ABI SOLiD data.&#xA;&#xA;The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualities are scaled differently. To use maq, you need to first convert the format with:&#xA;&#xA;      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq&#xA;&#xA;where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." icon="1" posX="315" posY="202" sourceCode="" location="pipeline://cranium.loni.usc.edu/maq">
                        <authors>
                                <author fullName="Ivo Dinov" email="" website="http://www.loni.ucla.edu/~dinov" />
                        </authors>
                        <citations>
                                <citation>PMID: 2181060</citation>
                                <citation>PMID: 18714091</citation>
                        </citations>
                        <tag>bioinformatics genomics</tag>
                        <uri>http://maq.sourceforge.net/maq-man.shtml</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010" />
                        </metadata>
                        <input id="MAQSol2SangerConverter_1.InputtheSolexaTXTreadsequencefile" name="Input the Solexa (TXT) read sequence file" description="s_1_sequence.txt is the Solexa read sequence file.&#xA;&#xA;maq sol2sanger s_1_sequence.txt s_1_sequence.fastq" required="true" enabled="true" order="1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="Text file" extension="txt" description="Text file" />
                                        </fileTypes>
                                </format>
                        </input>
                        <output id="MAQSol2SangerConverter_1.Outputfastqfie" name="Output fastq fie" description="Output (converted) sequence.fastq file" required="true" enabled="true" order="2">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="MAQ fastq file" extension="fastq" description="MAQ fastq file type" />
                                        </fileTypes>
                                </format>
                        </output>
                        <input id="MAQSol2SangerConverter_1.MAQRoutine" name="MAQ Routine" required="true" enabled="true" order="0">
                                <format type="String" cardinality="1" />
                        </input>
                        <executableAuthors>
                                <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="" />
                        </executableAuthors>
                        <license>http://maq.sourceforge.net/maq-manpage.shtml#12
GPL</license>
                </module>
                <module id="BowtieAlignment_1" name="Bowtie: Alignment" package="Bowtie" version="0.12.7" description="bowtie -S e_coli reads/e_coli_10000snp.fq ec_snp.sam &#xA;&#xA;Bowtie is an ultrafast, memory-efficient short read aligner geared toward quickly aligning large sets of short DNA sequences (reads) to large genomes. It aligns 35-base-pair reads to the human genome at a rate of 25 million reads per hour on a typical workstation. Bowtie indexes the genome with a Burrows-Wheeler  index to keep its memory footprint small: for the human genome, the index is typically about 2.2 GB (for unpaired alignment) or 2.9 GB (for paired-end or colorspace alignment). Multiple processors can be used simultaneously to achieve greater alignment speed. Bowtie can also output alignments in the standard SAM format, allowing Bowtie to interoperate with other tools supporting SAM, including the SAMtools consensus, SNP, and indel callers. Bowtie runs on the command line under Windows, Mac OS X, Linux, and Solaris.&#xA;&#xA;Bowtie also forms the basis for other tools, including TopHat: a fast splice junction mapper for RNA-seq reads, Cufflinks: a tool for transcriptome assembly and isoform quantitiation from RNA-seq reads, Crossbow: a cloud-computing software tool for large-scale resequencing data,and Myrna: a cloud computing tool for calculating differential gene expression in large RNA-seq datasets.&#xA;&#xA;/usr/local/loniWorkflows/Bioinformatics/bowtie/bowtie e_coli reads/e_coli_1000.fq&#xA;" icon="0" posX="178" posY="394" sourceCode="" location="pipeline://cranium.loni.usc.edu/bowtie">
                        <authors>
                                <author fullName="Ivo Dinov" email="" website="http://www.loni.ucla.edu/~dinov" />
                        </authors>
                        <citations>
                                <citation>PMID: 19261174 
PMID: 19930550
PMID: 19289445</citation>
                        </citations>
                        <tag>bioinformatics genomics</tag>
                        <uri>http://bowtie-bio.sourceforge.net/</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Mon Aug 30 12:20:56 PDT 2010" />
                        </metadata>
                        <output id="BowtieAlignment_1.OutputMAPfile" name="Output MAP file" description="samtools view -bt ref_list.txt -o aln.bam aln.sam.gz &#xA;&#xA;-t FILE &#x9;This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run ‘samtools faidx &lt;ref.fa&gt;’, the resultant index file &lt;ref.fa&gt;.fai can be used as this &lt;in.ref_list&gt; file." required="true" enabled="true" order="3">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="map" extension="map" description="fasta mapping file" />
                                                <filetype name="SAMtools SAM file" extension="sam" description="SAMtools SAM file" />
                                        </fileTypes>
                                </format>
                        </output>
                        <input id="BowtieAlignment_1.BowtieInputIndexGenome" name="Bowtie Input Index Genome" description="http://bowtie-bio.sourceforge.net/tutorial.shtml&#xA;&#xA;/usr/local/loniWorkflows/Bioinformatics/bowtie/bowtie e_coli reads/e_coli_1000.fq&#xA;&#xA;bowtie -t e_coli reads/e_coli_1000.fq e_coli.map&#xA;" required="true" enabled="true" order="1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="SAMtools" extension="fai" description="FAI file" />
                                        </fileTypes>
                                </format>
                        </input>
                        <input id="BowtieAlignment_1.InputFQFile" name="Input FQ File" description="samtools sort aln.bam aln_sorted.bam " required="true" enabled="true" order="2">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="MAQ fastq file" extension="fastq" description="MAQ fastq file type" />
                                                <filetype name="Sequence FASTQ File Type" extension="fq" description="Sequence FASTQ File Type" />
                                        </fileTypes>
                                </format>
                        </input>
                        <input id="BowtieAlignment_1.Options" name="Options" description="Also, the -t option instructs Bowtie to print timing statistics. The output should look something like this: &#xA;&#xA;-S outputs SAM file type" required="false" enabled="true" order="0">
                                <format type="String" cardinality="1" />
                                <values>
                                        <value>-S</value>
                                </values>
                        </input>
                        <executableAuthors>
                                <author fullName="Heng Li" email="lh3@sanger.ac.uk" website="[PMID: 19505943] " />
                        </executableAuthors>
                        <license>http://www.cbcb.umd.edu/research/SR-assembly.shtml 
open-source Artistic License</license>
                </module>
                <dataModule id="Reference_1" name="Reference " posX="53" posY="8" sourceCode="" type="File" source="true" loopIndex="false">
                        <metadata>
                                <data key="__creationDateKey" value="Thu Jun 16 12:52:22 PDT 2011" />
                        </metadata>
                        <output id="Reference_1.Output" name="Output" required="true" enabled="true" order="-1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="Fasta" extension="fa" description="FASTA Sequence Format" />
                                        </fileTypes>
                                </format>
                        </output>
                        <fileTypes>
                                <filetype name="Fasta" extension="fa" description="FASTA Sequence Format" />
                        </fileTypes>
                        <values>
                                <value>pipeline://cranium.loni.usc.edu//usr/local/loniWorkflows/Bioinformatics/data/gatk/gatk-hg18_ensembl.fa</value>
                        </values>
                </dataModule>
                <dataModule id="MAQRoutineInputsol2sanger_1" name="MAQ Routine Input (sol2sanger)" package="MAQ" version="0.7/1" description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:&#xA;&#xA;      maq command [options] parameters [...]" posX="370" posY="11" sourceCode="" type="String" source="true" loopIndex="false">
                        <uri>http://maq.sourceforge.net/maq-man.shtml#use</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010" />
                        </metadata>
                        <output id="MAQRoutineInputsol2sanger_1.Output" name="Output" description="To accelerate file I/O and to reduce the use of diskspace, maq first converts reference sequences to the binary fasta (BFA) format and converts reads to binary fastq (BFQ) format. It then aligns reads and builds the mapping assemblies. Most of the maq output are dumped in compressed binary format. Human readable information are only extracted when necessary. Maq integrates most of functions in one executable, which is invoked as:&#xA;&#xA;      maq command [options] parameters [...]" required="true" enabled="true" order="-1">
                                <format type="String" cardinality="1" />
                        </output>
                        <values>
                                <value>sol2sanger</value>
                        </values>
                </dataModule>
                <dataModule id="InputtheSolexaTXTreadsequencefile_1" name="Input the Solexa (TXT) read sequence file" package="MAQ" version="0.7.1" description="The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:&#xA;&#xA;      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq&#xA;&#xA;where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." posX="469" posY="51" sourceCode="" type="File" source="true" loopIndex="false">
                        <tag />
                        <uri>http://maq.sourceforge.net/maq-man.shtml#use</uri>
                        <metadata>
                                <data key="__creationDateKey" value="Wed Sep 01 13:01:35 PDT 2010" />
                        </metadata>
                        <output id="InputtheSolexaTXTreadsequencefile_1.Output" name="Output" description="The raw reads format used by Solexa (those `s_?_sequence.txt' from the Solexa pipeline) are different from mapass' FASTQ format in that the qualties are scaled differently. To use maq, you need to first convert the format with:&#xA;&#xA;      maq sol2sanger s_1_sequence.txt s_1_sequence.fastq&#xA;&#xA;where s_1_sequence.txt is the Solexa read sequence file. Missing this step will lead to unreliable SNP calling." required="true" enabled="true" order="-1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="Text file" extension="txt" description="Text file" />
                                        </fileTypes>
                                </format>
                        </output>
                        <fileTypes>
                                <filetype name="Text file" extension="txt" description="Text file" />
                        </fileTypes>
                        <values>
                                <value>pipeline://cranium.loni.usc.edu//usr/local/loniWorkflows/Bioinformatics/data/s_1_1_sequence.txt</value>
                        </values>
                </dataModule>
                <dataModule id="Output_1" name="Output" posX="190" posY="547" sourceCode="" type="File" source="false" loopIndex="false" dirDump="false">
                        <tag />
                        <metadata>
                                <data key="__creationDateKey" value="Fri Jun 17 15:45:32 PDT 2011" />
                        </metadata>
                        <input id="Output_1.Input" name="Input" required="true" enabled="true" order="-1">
                                <format type="File" cardinality="1">
                                        <fileTypes>
                                                <filetype name="File" extension="" description="Any type of data file" />
                                                <filetype name="map" extension="map" description="fasta mapping file" />
                                                <filetype name="SAMtools SAM file" extension="sam" description="SAMtools SAM file" />
                                        </fileTypes>
                                </format>
                        </input>
                        <fileTypes>
                                <filetype name="File" extension="" description="Any type of data file" />
                                <filetype name="map" extension="map" description="fasta mapping file" />
                                <filetype name="SAMtools SAM file" extension="sam" description="SAMtools SAM file" />
                        </fileTypes>
                        <values>
                                <value>pipeline://cranium.loni.usc.edu//ifs/tmp/{$username}/Alignment_Bowtie/sam.sam</value>
                        </values>
                </dataModule>
        </moduleGroup>
</pipeline>

